# git-cherry-pick
# Autogenerated from man page /usr/share/man/man1/git-cherry-pick.1.gz
complete -c git-cherry-pick -s e -l edit --description 'With this option, git cherry-pick will let you edit the commit message prior …'
complete -c git-cherry-pick -s x --description 'When recording the commit, append a line that says "(cherry picked from commi…'
complete -c git-cherry-pick -s r --description 'It used to be that the command defaulted to do -x described above, and -r was…'
complete -c git-cherry-pick -s m -l mainline --description 'Usually you cannot cherry-pick a merge because you do not know which side of …'
complete -c git-cherry-pick -s n -l no-commit --description 'Usually the command automatically creates a sequence of commits.'
complete -c git-cherry-pick -s s -l signoff --description 'Add Signed-off-by line at the end of the commit message.'
complete -c git-cherry-pick -s S -l gpg-sign --description 'GPG-sign commits.'
complete -c git-cherry-pick -l ff --description 'If the current HEAD is the same as the parent of the cherry-pick\\(cqed commit…'
complete -c git-cherry-pick -l allow-empty --description 'By default, cherry-picking an empty commit will fail, indicating that an expl…'
complete -c git-cherry-pick -l allow-empty-message --description 'By default, cherry-picking a commit with an empty message will fail.'
complete -c git-cherry-pick -l keep-redundant-commits --description 'If a commit being cherry picked duplicates a commit already in the current hi…'
complete -c git-cherry-pick -l strategy --description 'Use the given merge strategy.  Should only be used once.'
complete -c git-cherry-pick -o 'X<option>' -l strategy-option --description 'Pass the merge strategy-specific option through to the merge strategy.'
complete -c git-cherry-pick -l no-walk --description 'option was specified, see git-rev-list(1).'
complete -c git-cherry-pick -l continue --description '.'
complete -c git-cherry-pick -l quit --description '.'
complete -c git-cherry-pick -l abort --description '.'


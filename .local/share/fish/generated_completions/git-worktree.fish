# git-worktree
# Autogenerated from man page /usr/share/man/man1/git-worktree.1.gz
complete -c git-worktree -s f -l force --description 'By default, add refuses to create a new working tree when <commit-ish> is a b…'
complete -c git-worktree -s b -s B --description 'With add, create a new branch named <new-branch> starting at <commit-ish>, an…'
complete -c git-worktree -l detach --description 'With add, detach HEAD in the new working tree.'
complete -c git-worktree -l checkout --description 'By default, add checks out <commit-ish>, however, --no-checkout can be used t…'
complete -c git-worktree -l guess-remote --description 'With worktree add <path>, without <commit-ish>, instead of creating a new bra…'
complete -c git-worktree -l track --description 'When creating a new branch, if <commit-ish> is a branch, mark it as "upstream…'
complete -c git-worktree -l lock --description 'Keep the working tree locked after creation.'
complete -c git-worktree -s n -l dry-run --description 'With prune, do not remove anything; just report what it would remove.'
complete -c git-worktree -l porcelain --description 'With list, output in an easy-to-parse format for scripts.'
complete -c git-worktree -s v -l verbose --description 'With prune, report all removals.'
complete -c git-worktree -l expire --description 'With prune, only expire unused working trees older than <time>.'
complete -c git-worktree -l reason --description 'With lock, an explanation why the working tree is locked.'
complete -c git-worktree -l no-checkout --description 'can be used to suppress checkout in order to make customizations, such as con…'


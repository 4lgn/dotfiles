# git-remote
# Autogenerated from man page /usr/share/man/man1/git-remote.1.gz
complete -c git-remote -s v -l verbose --description 'Be a little more verbose and show remote url after name.'
complete -c git-remote -s f --description 'option, git fetch <name> is run immediately after the remote information is s…'
complete -c git-remote -l tags --description 'option, git fetch <name> imports every tag from the remote repository.'
complete -c git-remote -l no-tags --description 'option, git fetch <name> does not import tags from the remote repository.'
complete -c git-remote -s t --description 'option, instead of the default glob refspec for the remote to track all branc…'
complete -c git-remote -s m --description 'option, a symbolic-ref refs/remotes/<name>/HEAD is set up to point at remote\'…'
complete -c git-remote -l mirror --description 'refs/remotes/ namespace, but rather everything in refs/ on the remote will be…'
complete -c git-remote -s d --description 'or.'
complete -c git-remote -l delete --description 'refs/remotes/<name>/HEAD is deleted.'
complete -c git-remote -s a --description 'or.'
complete -c git-remote -l auto --description 'HEAD, then the symbolic-ref refs/remotes/<name>/HEAD is set to the same branc…'
complete -c git-remote -l add --description 'get-url.'
complete -c git-remote -l push --description '.'
complete -c git-remote -l all --description 'set-url.'
complete -c git-remote -s n --description 'option, the remote heads are not queried first with git ls-remote <name>; cac…'
complete -c git-remote -l dry-run --description 'option, report what branches will be pruned, but do not actually prune them.'
complete -c git-remote -l prune --description 'option, run pruning against all the remotes that are updated.'

